/*
 * File: ArPagarCajaOtroMtoCaller.java  2010-03-05 11:56:51-04:00
 * User: Felipe Gonzalez M (DP S.A.)
 *
 * File generated by OBCOM SQL Wizard 5.1.256 (www.obcom.cl).
 * DO NOT EDIT THIS FILE <<Signature:JE5-xXnX5AwtxYYjB5NxLA>>.
 */

package cl.teso.reca.pkgcajaservicestrx;

import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import javax.sql.DataSource;
import javax.sql.RowSet;

/**
 * Implements a caller of procedure "RECA.PKG_CAJA_SERVICES_TRX.AR_PAGAR_CAJA_OTRO_MTO".
 *
 * IN_USER             VARCHAR2(4000)     Input
 * IN_RUT_IRA          NUMBER             Input
 * IN_RUT_IRA_DV       CHAR(2000)         Input
 * IN_CODIGO_BARRA     VARCHAR2(4000)     Input
 * IN_ID_ORIGEN        VARCHAR2(4000)     Input
 * IN_PAQUETE          VARCHAR2(4000)     Input
 * IN_RUTA             VARCHAR2(4000)     Input
 * IN_FOLIO_F01        NUMBER             Input
 * IN_FECHA_ORIGEN     DATE               Input
 * IN_LOTE_CANAL       NUMBER             Input
 * IN_LOTE_TIPO        NUMBER             Input
 * IN_CUT_MOV_ESTADO   NUMBER             Input
 * IN_ES_REVERSA       CHAR(2000)         Input
 * IN_FRM_OPCION       CHAR(2000)         Input
 * IN_FMT_DATA_ERR     VARCHAR2(4000)     Input
 * IN_TURNO            VARCHAR2(4000)     Input
 * IN_TERMINAL         VARCHAR2(4000)     Input
 * IN_TICKET           VARCHAR2(4000)     Input
 * IN_SEC_INSTRUM      VARCHAR2(4000)     Input
 * IN_MEDIO_PAGO       VARCHAR2(4000)     Input
 * IN_MONTO_PAGO       NUMBER             Input
 * IN_ITEMS_OTRO_MTO   VARCHAR2(4000)     Input
 * IN_MONTO_PLAZO      NUMBER             Input
 * IN_REAJUSTES        NUMBER             Input
 * IN_INTERESES        NUMBER             Input
 * IN_MULTAS           NUMBER             Input
 * IN_CONDONACIONES    NUMBER             Input
 * IN_COMUNA           NUMBER             Input
 * OUT_ERRLVL          NUMBER             Output
 * OUT_MENSAJES        VARCHAR2(4000)     Output
 * OUT_CONTEST_ID      VARCHAR2(4000)     Output
 * OUT_RECA_MSG        REF CURSOR         Output
 * OUT_FECHA_CONTABLE  DATE               Output
 */
public class ArPagarCajaOtroMtoCaller extends ProcedureCaller
{
    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES_TRX.AR_PAGAR_CAJA_OTRO_MTO" using a DataSource.
     */
    public static ArPagarCajaOtroMtoResult execute(DataSource dataSource, String inUser, BigDecimal inRutIra, String inRutIraDv, String inCodigoBarra, String inIdOrigen, String inPaquete, String inRuta, BigDecimal inFolioF01, Date inFechaOrigen, BigDecimal inLoteCanal, BigDecimal inLoteTipo, BigDecimal inCutMovEstado, String inEsReversa, String inFrmOpcion, String inFmtDataErr, String inTurno, String inTerminal, String inTicket, String inSecInstrum, String inMedioPago, BigDecimal inMontoPago, String inItemsOtroMto, BigDecimal inMontoPlazo, BigDecimal inReajustes, BigDecimal inIntereses, BigDecimal inMultas, BigDecimal inCondonaciones, BigDecimal inComuna)
        throws SQLException
    {
        Connection conn = dataSource.getConnection();
        try
        {
            return execute(conn, inUser, inRutIra, inRutIraDv, inCodigoBarra, inIdOrigen, inPaquete, inRuta, inFolioF01, inFechaOrigen, inLoteCanal, inLoteTipo, inCutMovEstado, inEsReversa, inFrmOpcion, inFmtDataErr, inTurno, inTerminal, inTicket, inSecInstrum, inMedioPago, inMontoPago, inItemsOtroMto, inMontoPlazo, inReajustes, inIntereses, inMultas, inCondonaciones, inComuna);
        }
        finally
        {
            conn.close();
        }
    }

    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES_TRX.AR_PAGAR_CAJA_OTRO_MTO" using a Connection.
     */
    public static ArPagarCajaOtroMtoResult execute(Connection conn, String inUser, BigDecimal inRutIra, String inRutIraDv, String inCodigoBarra, String inIdOrigen, String inPaquete, String inRuta, BigDecimal inFolioF01, Date inFechaOrigen, BigDecimal inLoteCanal, BigDecimal inLoteTipo, BigDecimal inCutMovEstado, String inEsReversa, String inFrmOpcion, String inFmtDataErr, String inTurno, String inTerminal, String inTicket, String inSecInstrum, String inMedioPago, BigDecimal inMontoPago, String inItemsOtroMto, BigDecimal inMontoPlazo, BigDecimal inReajustes, BigDecimal inIntereses, BigDecimal inMultas, BigDecimal inCondonaciones, BigDecimal inComuna)
        throws SQLException
    {
        ArPagarCajaOtroMtoResult result = new ArPagarCajaOtroMtoResult();
        ArrayList resultSets = new ArrayList();
        if (conn.getMetaData().getURL().startsWith("jdbc:oracle:"))
        {
            CallableStatement call = conn.prepareCall("{call RECA.PKG_CAJA_SERVICES_TRX.AR_PAGAR_CAJA_OTRO_MTO(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
            try
            {
                call.setString(1, inUser);
                call.setBigDecimal(2, inRutIra);
                call.setString(3, inRutIraDv);
                call.setString(4, inCodigoBarra);
                call.setString(5, inIdOrigen);
                call.setString(6, inPaquete);
                call.setString(7, inRuta);
                call.setBigDecimal(8, inFolioF01);
                call.setTimestamp(9, toTimestamp(inFechaOrigen));
                call.setBigDecimal(10, inLoteCanal);
                call.setBigDecimal(11, inLoteTipo);
                call.setBigDecimal(12, inCutMovEstado);
                call.setString(13, inEsReversa);
                call.setString(14, inFrmOpcion);
                call.setString(15, inFmtDataErr);
                call.setString(16, inTurno);
                call.setString(17, inTerminal);
                call.setString(18, inTicket);
                call.setString(19, inSecInstrum);
                call.setString(20, inMedioPago);
                call.setBigDecimal(21, inMontoPago);
                call.setString(22, inItemsOtroMto);
                call.setBigDecimal(23, inMontoPlazo);
                call.setBigDecimal(24, inReajustes);
                call.setBigDecimal(25, inIntereses);
                call.setBigDecimal(26, inMultas);
                call.setBigDecimal(27, inCondonaciones);
                call.setBigDecimal(28, inComuna);
                call.registerOutParameter(29, Types.NUMERIC);
                call.registerOutParameter(30, Types.VARCHAR);
                call.registerOutParameter(31, Types.VARCHAR);
                call.registerOutParameter(32, ORACLE_CURSOR);
                call.registerOutParameter(33, Types.TIMESTAMP);
                call.execute();
                result.setOutErrlvl(call.getBigDecimal(29));
                result.setOutMensajes(call.getString(30));
                result.setOutContestId(call.getString(31));
                resultSets.add(toRowSet((ResultSet) call.getObject(32)));
                result.setOutFechaContable(call.getTimestamp(33));
            }
            finally
            {
                call.close();
            }
        }
        else
        {
            CallableStatement call = conn.prepareCall("{call RECA.PKG_CAJA_SERVICES_TRX.AR_PAGAR_CAJA_OTRO_MTO(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}");
            try
            {
                call.setString(1, inUser);
                call.setBigDecimal(2, inRutIra);
                call.setString(3, inRutIraDv);
                call.setString(4, inCodigoBarra);
                call.setString(5, inIdOrigen);
                call.setString(6, inPaquete);
                call.setString(7, inRuta);
                call.setBigDecimal(8, inFolioF01);
                call.setTimestamp(9, toTimestamp(inFechaOrigen));
                call.setBigDecimal(10, inLoteCanal);
                call.setBigDecimal(11, inLoteTipo);
                call.setBigDecimal(12, inCutMovEstado);
                call.setString(13, inEsReversa);
                call.setString(14, inFrmOpcion);
                call.setString(15, inFmtDataErr);
                call.setString(16, inTurno);
                call.setString(17, inTerminal);
                call.setString(18, inTicket);
                call.setString(19, inSecInstrum);
                call.setString(20, inMedioPago);
                call.setBigDecimal(21, inMontoPago);
                call.setString(22, inItemsOtroMto);
                call.setBigDecimal(23, inMontoPlazo);
                call.setBigDecimal(24, inReajustes);
                call.setBigDecimal(25, inIntereses);
                call.setBigDecimal(26, inMultas);
                call.setBigDecimal(27, inCondonaciones);
                call.setBigDecimal(28, inComuna);
                call.registerOutParameter(29, Types.NUMERIC);
                call.registerOutParameter(30, Types.VARCHAR);
                call.registerOutParameter(31, Types.VARCHAR);
                call.registerOutParameter(32, Types.TIMESTAMP);
                int updateCount = 0;
                boolean haveRset = call.execute();
                while (haveRset || updateCount != -1)
                {
                    if (!haveRset)
                        updateCount = call.getUpdateCount();
                    else
                        resultSets.add(toRowSet(call.getResultSet()));
                    haveRset = call.getMoreResults();
                }
                result.setOutErrlvl(call.getBigDecimal(29));
                result.setOutMensajes(call.getString(30));
                result.setOutContestId(call.getString(31));
                result.setOutFechaContable(call.getTimestamp(32));
            }
            finally
            {
                call.close();
            }
        }
        if (resultSets.size() > 0)
        {
            RowSet[] rowSets = new RowSet[resultSets.size()];
            result.setRowSets((RowSet[]) resultSets.toArray(rowSets));
        }
        return result;
    }
}
