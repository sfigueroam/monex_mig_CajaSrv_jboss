/*
 * File: GetOficinaDescripcionCaller.java  2009-09-10 15:52:14-04:00
 * User: Felipe Gonzalez (DP S.A.)
 *
 * File generated by OBCOM SQL Wizard 5.1.248 (www.obcom.cl).
 * DO NOT EDIT THIS FILE <<Signature:18qGpD3LPrYQI8oCoHtuA4>>.
 */

package cl.teso.reca.cajasrv.pkgcajaservices;

import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import javax.sql.DataSource;
import javax.sql.RowSet;

/**
 * Implements a caller of procedure "RECA.PKG_CAJA_SERVICES.GET_OFICINA_DESCRIPCION".
 *
 * IN_OFICINA_NUMERO   NUMBER             Input
 * OUT_RUT_IRA         NUMBER             Output
 * OUT_RUT_IRA_DV      VARCHAR2(4000)     Output
 * OUT_COD_ABIF        NUMBER             Output
 * OUT_OFICINA_NOMBRE  VARCHAR2(4000)     Output
 * OUT_COMUNA_CONARA   NUMBER             Output
 * OUT_CTA_CTE         NUMBER             Output
 * OUT_RESULTADO       NUMBER             Output
 */
public class GetOficinaDescripcionCaller extends ProcedureCaller
{
    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES.GET_OFICINA_DESCRIPCION" using a DataSource.
     */
    public static GetOficinaDescripcionResult execute(DataSource dataSource, BigDecimal inOficinaNumero)
        throws SQLException
    {
        Connection conn = dataSource.getConnection();
        try
        {
            return execute(conn, inOficinaNumero);
        }
        finally
        {
            conn.close();
        }
    }

    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES.GET_OFICINA_DESCRIPCION" using a Connection.
     */
    public static GetOficinaDescripcionResult execute(Connection conn, BigDecimal inOficinaNumero)
        throws SQLException
    {
        GetOficinaDescripcionResult result = new GetOficinaDescripcionResult();
        ArrayList resultSets = new ArrayList();
        CallableStatement call = conn.prepareCall("{call RECA.PKG_CAJA_SERVICES.GET_OFICINA_DESCRIPCION(?,?,?,?,?,?,?,?)}");
        try
        {
            call.setBigDecimal(1, inOficinaNumero);
            call.registerOutParameter(2, Types.NUMERIC);
            call.registerOutParameter(3, Types.VARCHAR);
            call.registerOutParameter(4, Types.NUMERIC);
            call.registerOutParameter(5, Types.VARCHAR);
            call.registerOutParameter(6, Types.NUMERIC);
            call.registerOutParameter(7, Types.NUMERIC);
            call.registerOutParameter(8, Types.NUMERIC);
            int updateCount = 0;
            boolean haveRset = call.execute();
            while (haveRset || updateCount != -1)
            {
                if (!haveRset)
                    updateCount = call.getUpdateCount();
                else
                    resultSets.add(toRowSet(call.getResultSet()));
                haveRset = call.getMoreResults();
            }
            result.setOutRutIra(call.getBigDecimal(2));
            result.setOutRutIraDv(call.getString(3));
            result.setOutCodAbif(call.getBigDecimal(4));
            result.setOutOficinaNombre(call.getString(5));
            result.setOutComunaConara(call.getBigDecimal(6));
            result.setOutCtaCte(call.getBigDecimal(7));
            result.setOutResultado(call.getBigDecimal(8));
        }
        finally
        {
            call.close();
        }
        if (resultSets.size() > 0)
        {
            RowSet[] rowSets = new RowSet[resultSets.size()];
            result.setRowSets((RowSet[]) resultSets.toArray(rowSets));
        }
        return result;
    }
}
