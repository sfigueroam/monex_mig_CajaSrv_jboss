/*
 * File: GetItemdefSafeCaller.java  2009-09-10 15:52:14-04:00
 * User: Felipe Gonzalez (DP S.A.)
 *
 * File generated by OBCOM SQL Wizard 5.1.248 (www.obcom.cl).
 * DO NOT EDIT THIS FILE <<Signature:3952YC8avONm44k7Unug1w>>.
 */

package cl.teso.reca.cajasrv.pkgcajaservices;

import java.math.BigDecimal;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Types;
import java.util.ArrayList;
import javax.sql.DataSource;
import javax.sql.RowSet;

/**
 * Implements a caller of procedure "RECA.PKG_CAJA_SERVICES.GET_ITEMDEF_SAFE".
 *
 * IN_FRM_ID                  NUMBER             Input
 * IN_ITM_CODE                NUMBER             Input
 * OUT_ITEMDESCRIPCION        VARCHAR2(4000)     Output
 * OUT_ITEMDESCRIPCION_LARGA  VARCHAR2(4000)     Output
 * OUT_ITEMTYPE               VARCHAR2(4000)     Output
 * OUT_ITEMUSAGE              VARCHAR2(4000)     Output
 * OUT_ITEMPRINT              VARCHAR2(4000)     Output
 * OUT_ITEMREP                VARCHAR2(4000)     Output
 * OUT_RESULTADO              NUMBER             Output
 */
public class GetItemdefSafeCaller extends ProcedureCaller
{
    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES.GET_ITEMDEF_SAFE" using a DataSource.
     */
    public static GetItemdefSafeResult execute(DataSource dataSource, BigDecimal inFrmId, BigDecimal inItmCode)
        throws SQLException
    {
        Connection conn = dataSource.getConnection();
        try
        {
            return execute(conn, inFrmId, inItmCode);
        }
        finally
        {
            conn.close();
        }
    }

    /**
     * Executes procedure "RECA.PKG_CAJA_SERVICES.GET_ITEMDEF_SAFE" using a Connection.
     */
    public static GetItemdefSafeResult execute(Connection conn, BigDecimal inFrmId, BigDecimal inItmCode)
        throws SQLException
    {
        GetItemdefSafeResult result = new GetItemdefSafeResult();
        ArrayList resultSets = new ArrayList();
        CallableStatement call = conn.prepareCall("{call RECA.PKG_CAJA_SERVICES.GET_ITEMDEF_SAFE(?,?,?,?,?,?,?,?,?)}");
        try
        {
            call.setBigDecimal(1, inFrmId);
            call.setBigDecimal(2, inItmCode);
            call.registerOutParameter(3, Types.VARCHAR);
            call.registerOutParameter(4, Types.VARCHAR);
            call.registerOutParameter(5, Types.VARCHAR);
            call.registerOutParameter(6, Types.VARCHAR);
            call.registerOutParameter(7, Types.VARCHAR);
            call.registerOutParameter(8, Types.VARCHAR);
            call.registerOutParameter(9, Types.NUMERIC);
            int updateCount = 0;
            boolean haveRset = call.execute();
            while (haveRset || updateCount != -1)
            {
                if (!haveRset)
                    updateCount = call.getUpdateCount();
                else
                    resultSets.add(toRowSet(call.getResultSet()));
                haveRset = call.getMoreResults();
            }
            result.setOutItemdescripcion(call.getString(3));
            result.setOutItemdescripcionLarga(call.getString(4));
            result.setOutItemtype(call.getString(5));
            result.setOutItemusage(call.getString(6));
            result.setOutItemprint(call.getString(7));
            result.setOutItemrep(call.getString(8));
            result.setOutResultado(call.getBigDecimal(9));
        }
        finally
        {
            call.close();
        }
        if (resultSets.size() > 0)
        {
            RowSet[] rowSets = new RowSet[resultSets.size()];
            result.setRowSets((RowSet[]) resultSets.toArray(rowSets));
        }
        return result;
    }
}
