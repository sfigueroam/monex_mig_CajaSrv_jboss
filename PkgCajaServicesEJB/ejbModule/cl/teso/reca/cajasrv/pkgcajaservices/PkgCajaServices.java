/*
 * File: PkgCajaServicesBean.java  2009-09-10 15:52:30-04:00
 * User: Felipe Gonzalez (DP S.A.)
 *
 * File generated by OBCOM SQL Wizard 5.1.248 (www.obcom.cl).
 * DO NOT EDIT THIS FILE <<Signature:Z7fpeS+T74QoyxLkpjmM2R>>.
 */

package cl.teso.reca.cajasrv.pkgcajaservices;

import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.Date;

import javax.annotation.Resource;
import javax.ejb.CreateException;
import javax.ejb.SessionContext;
import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;
import javax.sql.DataSource;


@Stateless(name="PkgCajaServices", mappedName="cl.teso.reca.cajasrv.pkgcajaservices")
@TransactionAttribute(TransactionAttributeType.REQUIRED)
public class PkgCajaServices implements PkgCajaServicesLocal,PkgCajaServicesRemote
{
    private static final long serialVersionUID = 1L;


    public PkgCajaServices()
    {
    }
    
    private SessionContext sessionContext;
    
    @Resource(lookup="java:/jdbc/recaDS")
    private DataSource dataSource;


	public ConsultarArResult consultarAr(BigDecimal dpsid)
        throws PkgCajaServicesException
    {
        try
        {
            return ConsultarArCaller.execute(dataSource, dpsid);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }

	public FormPagoCajaResult formPagoCaja(BigDecimal inFrmId)
        throws PkgCajaServicesException
    {
        try
        {
            return FormPagoCajaCaller.execute(dataSource, inFrmId);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }

	public GetFormDescrResult getFormDescr(BigDecimal inId)
        throws PkgCajaServicesException
    {
        try
        {
            return GetFormDescrCaller.execute(dataSource, inId);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetFormPropertiesResult getFormProperties(BigDecimal inFrmId, String inProp)
        throws PkgCajaServicesException
    {
        try
        {
            return GetFormPropertiesCaller.execute(dataSource, inFrmId, inProp);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetFrmIdResult getFrmId(BigDecimal inFormCod, String inFormVer, String inFormVig)
        throws PkgCajaServicesException
    {
        try
        {
            return GetFrmIdCaller.execute(dataSource, inFormCod, inFormVer, inFormVig);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetFrmIdSafeResult getFrmIdSafe(BigDecimal inFormCod, String inFormVer, String inFormVig)
        throws PkgCajaServicesException
    {
        try
        {
            return GetFrmIdSafeCaller.execute(dataSource, inFormCod, inFormVer, inFormVig);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetItemdefResult getItemdef(BigDecimal inFrmId, BigDecimal inItmCode)
        throws PkgCajaServicesException
    {
        try
        {
            return GetItemdefCaller.execute(dataSource, inFrmId, inItmCode);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetItemdefSafeResult getItemdefSafe(BigDecimal inFrmId, BigDecimal inItmCode)
        throws PkgCajaServicesException
    {
        try
        {
            return GetItemdefSafeCaller.execute(dataSource, inFrmId, inItmCode);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetItemdescripcionResult getItemdescripcion(BigDecimal inFormtipo, String inFormversion, BigDecimal inItmCode)
        throws PkgCajaServicesException
    {
        try
        {
            return GetItemdescripcionCaller.execute(dataSource, inFormtipo, inFormversion, inItmCode);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetItmCodeUsageResult getItmCodeUsage(BigDecimal inFrmId, String inCodigoUsage)
        throws PkgCajaServicesException
    {
        try
        {
            return GetItmCodeUsageCaller.execute(dataSource, inFrmId, inCodigoUsage);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetMapComunasResult getMapComunas()
        throws PkgCajaServicesException
    {
        try
        {
            return GetMapComunasCaller.execute(dataSource);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetMapDpsResult getMapDps()
        throws PkgCajaServicesException
    {
        try
        {
            return GetMapDpsCaller.execute(dataSource);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetMapFResult getMapF()
        throws PkgCajaServicesException
    {
        try
        {
            return GetMapFCaller.execute(dataSource);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetOficinaDescripcionResult getOficinaDescripcion(BigDecimal inOficinaNumero)
        throws PkgCajaServicesException
    {
        try
        {
            return GetOficinaDescripcionCaller.execute(dataSource, inOficinaNumero);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GetTablaOficinasResult getTablaOficinas()
        throws PkgCajaServicesException
    {
        try
        {
            return GetTablaOficinasCaller.execute(dataSource);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public GrabaLogTransaccionResult grabaLogTransaccion(String inTransaccionNombre, BigDecimal inOficina, BigDecimal inFormulario, String inCodigoAr, String inRutRol, String inParametros, BigDecimal inCodigoRetorno, String inMensajeRetorno, BigDecimal inCodigoRetOracle, String inMensajeRetOracle)
        throws PkgCajaServicesException
    {
        try
        {
            return GrabaLogTransaccionCaller.execute(dataSource, inTransaccionNombre, inOficina, inFormulario, inCodigoAr, inRutRol, inParametros, inCodigoRetorno, inMensajeRetorno, inCodigoRetOracle, inMensajeRetOracle);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }

	public IngresarArResult ingresarAr(Date inFechaCaja, Date inFechaEmision, Date inFechaValidez, BigDecimal inSistema, String inUsuario, BigDecimal inClienteTipo, BigDecimal inRutRol, String inRutRolDv, BigDecimal inFormCod, String inFormVer, BigDecimal inFormFolio, String inFormFolioDv, Date inPeriodo, Date inFechaVcto, String inItems, String inItemsCut, BigDecimal inMoneda, BigDecimal inMontoPlazo, BigDecimal inMontoTotal, BigDecimal inReajustes, BigDecimal inIntereses, BigDecimal inMultas, BigDecimal inCondonaciones, String inEsRezagado, String outCodigoBarra)
        throws PkgCajaServicesException
    {
        try
        {
            return IngresarArCaller.execute(dataSource, inFechaCaja, inFechaEmision, inFechaValidez, inSistema, inUsuario, inClienteTipo, inRutRol, inRutRolDv, inFormCod, inFormVer, inFormFolio, inFormFolioDv, inPeriodo, inFechaVcto, inItems, inItemsCut, inMoneda, inMontoPlazo, inMontoTotal, inReajustes, inIntereses, inMultas, inCondonaciones, inEsRezagado, outCodigoBarra);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public IngresarPagoResult ingresarPago(BigDecimal inDpsid, String inIdPago, BigDecimal inMontoPagado, Date inFechaPago)
        throws PkgCajaServicesException
    {
        try
        {
            return IngresarPagoCaller.execute(dataSource, inDpsid, inIdPago, inMontoPagado, inFechaPago);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public PenalizeResult penalize(String touplestgf, String contexttgfin)
        throws PkgCajaServicesException
    {
        try
        {
            return PenalizeCaller.execute(dataSource, touplestgf, contexttgfin);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


	public ProcesarResult procesar(String touplestgf, String contexttgfin)
        throws PkgCajaServicesException
    {
        try
        {
            return ProcesarCaller.execute(dataSource, touplestgf, contexttgfin);
        }
        catch (SQLException ex)
        {
            // setRollbackOnly No hacemos RollBack en este EJB ();
            throw new PkgCajaServicesException(ex);
        }
    }


    protected DataSource getDataSource()
    {
        return dataSource;
    }

    protected SessionContext getSessionContext()
    {
        return sessionContext;
    }

    protected void setRollbackOnly()
    {
        try
        {
            //getSessionContext().setRollbackOnly();
        }
        catch (IllegalStateException ex)
        {
            // Ignore: there is no active transaction.
        }
    }


	public void setSessionContext(SessionContext context)
    {
        sessionContext = context;
    }


	public void ejbCreate()
        throws CreateException
    {
    }

 
	public void ejbActivate() {}


	public void ejbPassivate() {}


	public void ejbRemove() {}
}
